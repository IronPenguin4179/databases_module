1.) You find related data between two tables with a JOIN statement.

2.)
CROSS JOIN Displays every row of first table matched with every row in second table. All possible row combinations. 
LEFT JOIN A join where every row from the left table will be included even if the join condition isn't met. A NULL
          value is placed in the unmatched fields.
RIGHT JOIN See LEFT JOIN but prioritizing the RIGHT table
INNER JOIN A default JOIN that only shows rows that match the JOIN condition
FULL OUTER JOIN Combined LEFT and RIGHT JOIN where every row from both tables is displayed and NULL values replace 
          unmatched values.

3.) Primary key is row data from your primary table that is to be compared to the foreign key on the second table. 
    Let's say you had two tables, one a christmas list and the other a store inventory and price list. If you were trying to compare
    them to find out how much each item will cost you would do a JOIN with the toy name on the christmas list table as the primary 
    key, and the toy name on the inventory as the foreign key. The two would then be compared in each row to generate a christmas toy
    price list.

4.) Aliasing is used to shorthand table names. This can be done since the table names have to be explicitly stated in the FROM/JOIN
    sections so the rest aren't needed to be explicitly stated every time. An AS statement is used to tell the query what the 
    shorthand represents.

5.)
SELECT p.name, c.salary, c.vacation_days 
FROM professor AS p
JOIN compensation AS c 
ON p.id = c.professor_id;

6.) A natural join is used when the join connection is implicit between the two tables. An example might be a list of your favorite
    channels and a schedule of television channels. The two could naturally join on the channel number as they were along the same 
    format

7.)

SELECT e.name, s.date
FROM employees AS e
JOIN scheduled_shifts AS ss
ON e.id = ss.employee_id
RIGHT OUTER JOIN shifts AS s
ON s.id = ss.shift_id;

"Hermione Granger"	"1998-03-09"
"Hermione Granger"	"1998-03-10"
"Hermione Granger"	"1998-03-11"
"Hermione Granger"	"1998-03-12"
"Hermione Granger"	"1998-03-13"
"Ronald Weasley"	"1998-03-10"
"Ronald Weasley"	"1998-03-12"
"Luna Lovegood"	"1998-03-09"
"Luna Lovegood"	"1998-03-11"
"Luna Lovegood"	"1998-03-13"
"Draco Malfoy"	"1998-03-11"
"Draco Malfoy"	"1998-03-12"
"Draco Malfoy"	"1998-03-13"
"Padma Patil"	"1998-03-09"
"Padma Patil"	"1998-03-10"
"Padma Patil"	"1998-03-11"
"Padma Patil"	"1998-03-09"
"Padma Patil"	"1998-03-10"
"Padma Patil"	"1998-03-11"
"Cho Chang"	"1998-03-12"
"Cho Chang"	"1998-03-13"
"Dean Thomas"	"1998-03-09"
"Dean Thomas"	"1998-03-10"
null        	"1998-03-13"
null	        "1998-03-12"


8.)

SELECT v.first_name, d.name
FROM volunteers AS v
LEFT OUTER JOIN dogs AS d
ON v.foster_dog_id = d.id;

"Rubeus"	"Munchkin"
"Marjorie"	"Marmaduke"
"Sirius"	null
"Remus"		null
"Albus"		null
------------------------
SELECT c.name, a.first_name, ca.date
FROM cats AS c
JOIN cat_adoptions AS ca
ON c.id = ca.cat_id
JOIN adopters AS a
ON a.id = ca.adopter_id
WHERE ca.date >= '2018-08-01';

"Mushi"	"Arabella"	"2018-08-04"
"Victoire"	"Argus"	"2018-08-09"
------------------------
SELECT a.first_name AS adopter_name, d.name AS dog_name
FROM adopters AS a
LEFT OUTER JOIN dog_adoptions AS da
ON a.id = da.adopter_id
FULL OUTER JOIN dogs AS d
ON d.id = da.dog_id
WHERE d.name IS NULL OR a.first_name IS NULL;

"Arabella"
"Hermione"
	    "Munchkin"
	    "Boujee"
	    "Lassie"
	    "Marley"
	    "Marmaduke"
------------------------
SELECT a.first_name AS adopter_name, d.name AS dog_name
FROM adopters AS a
LEFT OUTER JOIN dog_adoptions AS da
ON a.id = da.adopter_id
CROSS JOIN dogs AS d;

"Argus"	"Boujee"
"Argus"	"Munchkin"
"Argus"	"Marley"
"Argus"	"Lassie"
"Argus"	"Marmaduke"
"Argus"	"Rosco"
"Arabella"	"Boujee"
"Arabella"	"Munchkin"
"Arabella"	"Marley"
"Arabella"	"Lassie"
"Arabella"	"Marmaduke"
"Arabella"	"Rosco"
"Hermione"	"Boujee"
"Hermione"	"Munchkin"
"Hermione"	"Marley"
"Hermione"	"Lassie"
"Hermione"	"Marmaduke"
"Hermione"	"Rosco"
------------------------
SELECT c.name, ca.cat_id
FROM cats AS c
LEFT OUTER JOIN cat_adoptions AS ca
ON c.id = ca.cat_id
WHERE ca.cat_id IS NULL;

"Seashell"
"Nala"	
------------------------
SELECT d.name, da.dog_id
FROM dogs AS d
LEFT OUTER JOIN dog_adoptions AS da
ON d.id = da.dog_id
WHERE da.dog_id IS NULL;

"Boujee"
"Munchkin"	
"Marley"	
"Lassie"	
"Marmaduke"	
------------------------
SELECT v.first_name, d.name
FROM volunteers AS v
LEFT OUTER JOIN dog_adoptions as da
ON v.id = da.adopter_id
RIGHT OUTER JOIN dogs as d
ON da.dog_id = d.id;

"Remus"	"Rosco"
null	"Munchkin"
null	"Boujee"
null	"Lassie"
null	"Marley"
null	"Marmaduke"
------------------------
SELECT a.first_name
FROM adopters AS a
JOIN dog_adoptions AS da
ON a.id = da.adopter_id
JOIN dogs AS d
ON da.dog_id = d.id
WHERE d.name = 'Rosco';

"Argus"

9.)
SELECT p.id, p.name
FROM patrons AS p
JOIN holds AS h
ON p.id = h.patron_id
JOIN books AS b
ON h.isbn = b.isbn
WHERE b.title = 'Advanced Potion-Making'
ORDER BY p.id;

2	"Terry Boot"
5	"Cedric Diggory"
------------------------
SELECT b.title, t.checked_in_date
FROM books AS b
NATURAL JOIN transactions AS t;

"Hogwarts: A History"	"2012-08-24"
"Advanced Potion-Making"	"2012-08-24"
"Fantastic Beasts and Where to Find Them"	"2012-08-24"
"Fantastic Beasts and Where to Find Them"	"2018-08-20"
"Advanced Potion-Making"	null
"Fantastic Beasts and Where to Find Them"	"2018-08-23"
"Fantastic Beasts and Where to Find Them"	null
------------------------
SELECT b.title, AVG(DATE_PART('day', checked_in_date) - DATE_PART('day',checked_out_date)) AS avg_checkout_time
FROM transactions AS t
NATURAL JOIN books AS b
GROUP BY b.title;

"Advanced Potion-Making"	"1"
"Fantastic Beasts and Where to Find Them"	"2"
"Hogwarts: A History"	"1"
------------------------
SELECT b.title, t.checked_out_date
FROM transactions AS t
NATURAL JOIN books AS b 
WHERE (DATE_PART('year',CURRENT_DATE) - DATE_PART('year',checked_out_date)) >= 5
ORDER BY checked_out_date;

"Hogwarts: A History"	"2012-08-23"
"Advanced Potion-Making"	"2012-08-23"
"Fantastic Beasts and Where to Find Them"	"2012-08-23"
------------------------
SELECT p.name, b.title, t.checked_in_date 
FROM patrons AS p
JOIN transactions AS t
ON p.id = t.patron_id 
JOIN books AS b 
ON t.isbn = b.isbn;

"Hermione Granger"	"Hogwarts: A History"	"2012-08-24"
"Cho Chang"	"Advanced Potion-Making"	"2012-08-24"
"Terry Boot"	"Fantastic Beasts and Where to Find Them"	"2012-08-24"
"Padma Patil"	"Fantastic Beasts and Where to Find Them"	"2018-08-20"
"Terry Boot"	"Advanced Potion-Making"	null
"Hermione Granger"	"Fantastic Beasts and Where to Find Them"	"2018-08-23"
"Cedric Diggory"	"Fantastic Beasts and Where to Find Them"	null